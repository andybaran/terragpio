syntax = "proto3";

option go_package = "terragpio/terragpio";

package terragpio;

service setgpio {
    rpc SetPWM(PWMRequest) returns(PWMResponse) {}
    rpc SetBME280(BME280Request) returns(BME280Response) {}
    rpc PWMDutyCycleOutput_BME280TempInput(FanControllerRequest) returns(FanControllerResponse) {}
}

message PWMRequest {
    string pin = 1; // expect the pin to be expressed in terms of GPIO standard (i.e. GPIO6) 
    string dutycycle = 2; // format is "nn%" where nn is 00 - 100
    string frequency = 3; // format is "nM" where is Mega Hertz 
}

message PWMResponse {
    bool verified = 1; 
}

message BME280Request {
    string I2Cbus = 1;
    uint64 I2Caddr = 2; // format is 0x76
}

message BME280Response {
    string temperature = 1;
    string humidity = 2;
    string pressure = 3;
}

message FanControllerRequest {
    uint64 timeInterval = 1;
/*     string I2Caddr = 2;
    string I2Cbus = 3; */
    optional BME280Request BME280Device = 2;
    uint64 temperatureMax = 3;
    uint64 temperatureMin = 4;
/*     string fanPin = 6;
    string fanFrequency = 7; */
    optional PWMRequest fanDevice = 5; 
    uint64 dutyCycleMax = 6;
    uint64 dutyCycleMin = 7;    
}

message FanControllerResponse {
  //ToDo: Read more about GRPC status
  // https://cloud.google.com/apis/design/errors#error_model  
}