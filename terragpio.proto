syntax = "proto3";

option go_package = "./terragpio/terragpio";

package terragpio;
// TODO: Implement SENSEPWM
service setgpio {
    rpc SetPWM(PWMRequest) returns(PinSetResponse) {}
    rpc SetBME280(BME280Request) returns(PinSetResponse) {}
    rpc SenseBME280(PinSetRequest) returns(BME280Response) {} //No need for a duplicate message (at this time) just to pass the pin value even though we are reading
    rpc SensePWM(PinSetRequest) returns(PWMResponse) {} //No need for a duplicate message (at this time) just to pass the pin value even though we are reading
    rpc PWMDutyCycleOutput_BME280TempInput(FanControllerRequest) returns(FanControllerResponse) {}
}

message PinSetResponse {
	string pinNumber = 1;
}

message PWMRequest {
    string pin = 1; // expect the pin to be expressed in terms of GPIO standard (i.e. GPIO6) 
    string dutycycle = 2; // format is "nn%" where nn is 00 - 100
    string frequency = 3; // format is "nM" where n is Mega Hertz 
}

message PWMResponse {
    string dutycycle = 1;
    string frequency = 2; 
}

message BME280Request {
    string I2Cbus = 1;
    string I2Caddr = 2; // format is 0x76
}

message BME280Response {
    string temperature = 1;
    string humidity = 2;
    string pressure = 3;
}

message PinSetRequest {
	string pinNumber = 1; 
}

message FanControllerRequest {
    uint64 timeInterval = 1;
    string BME280DevicePin = 2;
    uint64 temperatureMax = 3;
    uint64 temperatureMin = 4;
    string fanDevicePin = 5; 
    uint64 dutyCycleMax = 6;
    uint64 dutyCycleMin = 7;    
}

message FanControllerResponse {
    string pinCombo = 1;
}